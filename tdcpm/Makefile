# This file is part of UCESB - a tool for data unpacking and processing.
#
# Copyright (C) 2022  Haakan T. Johansson  <f96hajo@chalmers.se>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA  02110-1301  USA

ifndef QUIET
QUIET=@
endif

GENDIR = generated

GENOBJS = $(GENDIR)/tdcpm_parser.o $(GENDIR)/tdcpm_lexer.o
OBJS    = tdcpm_test.o tdcpm_test_struct.o \
        tdcpm_hash_table.o tdcpm_string_table.o tdcpm_malloc.o \
        tdcpm_var_name.o tdcpm_units.o \
        tdcpm_defs.o tdcpm_defs_dump.o \
        tdcpm_struct_layout.o tdcpm_struct_dump.o \
        tdcpm_assign.o tdcpm_file_line.o

ALL_OBJS = $(OBJS) $(GENOBJS)

AUTO_DEPS = $(ALL_OBJS:%.o=%.d)

CCLINK = $(CC)

CFLAGS += -g -I. -I../common # so autogenerated files find includes
CFLAGS += # -ansi , troubles with strdup and fileno
CFLAGS += -O3

CFLAGS += -Wall -W -Wno-unused-function -Wno-unused-label -Wno-unused-parameter -Wwrite-strings # -Wconversion -Werror -Wcast-qual #-Wshadow

CCLIBS += -lm

UNAME_S:=$(shell uname -s)
ifneq ($(UNAME_S),Darwin)
  CFLAGS += 
endif

OPTFLAGS += # -fmudflap #-fstack-protector

#########################################

include ../makefile_filter_warnings.inc

#########################################

CPP_DEFINES_CYGWIN = $(shell $(CPP) -x c -dM /dev/null | grep __CYGWIN__)

#########################################
# Cygwin got vsnprintf problems with -ansi

ifneq (,$(CPP_DEFINES_CYGWIN))
CFLAGS := $(filter-out -Wshadow -ansi,$(CFLAGS))
endif

#########################################

# Default target

all: tdcpm_test

# Cleanup

clean:
	rm -rf $(GENDIR)
	rm -f $(ALL_OBJS)
	rm -f $(AUTO_DEPS)
	rm -f tdcpm_test.base.dep
	rm -f tdcpm_test.dep
	rm -f tdcpm_test

# Create the autogenerated files (lexer, parser)

include ../lu_common/flex_patching.mk

INCLUDE_FILE_PL = ../lu_common/include_file.pl

AUTO_DEPS += $(GENDIR)/tdcpm_parser.y.incfile.d

$(GENDIR)/tdcpm_parser.y.incfile.d: tdcpm_parser.y $(INCLUDE_FILE_PL)
	@echo " INCDEPS $@"
	@mkdir -p $(dir $@)
	$(QUIET)perl $(INCLUDE_FILE_PL) --input=$< --dependencies=$@ > $@

$(GENDIR)/tdcpm_parser.y.incfile: tdcpm_parser.y $(GENDIR)/tdcpm_parser.y.incfile.d
	@echo " INCFILE $@"
	@mkdir -p $(dir $@)
	$(QUIET)perl $(INCLUDE_FILE_PL) --input=$< && touch $@

YACC_SUPPORTS_WERROR := $(shell yacc -Werror --version 2>/dev/null)
ifneq ($(YACC_SUPPORTS_WERROR),)
ifeq ($(NO_YACC_WERROR),)
YACC_WERROR_FLAG=-Werror
endif
endif


$(GENDIR)/y.tab.c: tdcpm_parser.y $(GENDIR)/tdcpm_parser.y.incfile
	@echo "  YACC   $@"
	@mkdir -p $(dir $@)
	$(QUIET)$(YACC) -d $(YACC_WERROR_FLAG) -o $@ $< || \
	  (echo "If -W flag unknown, try to compile with" \
		" '$(MAKE) NO_YACC_WERROR=1'" && \
	   exit 1 )
	$(QUIET)touch $(GENDIR)/y.tab.h

$(GENDIR)/y.tab.h: $(GENDIR)/y.tab.c

$(GENDIR)/tdcpm_parser.c: $(GENDIR)/y.tab.c
	@echo "   CP    $@"
	$(QUIET)cp $(GENDIR)/y.tab.c $@

$(GENDIR)/tdcpm_parser.h: $(GENDIR)/y.tab.h
	@echo "   CP    $@"
	$(QUIET)cp $(GENDIR)/y.tab.h $@

AUTO_DEPS += $(GENDIR)/tdcpm_lexer.lex.incfile.d

$(GENDIR)/tdcpm_lexer.lex.incfile.d: tdcpm_lexer.lex $(INCLUDE_FILE_PL)
	@echo " INCDEPS $@"
	@mkdir -p $(dir $@)
	@perl $(INCLUDE_FILE_PL) --input=$< --dependencies=$@ > $@

$(GENDIR)/tdcpm_lexer.lex.incfile: tdcpm_lexer.lex $(GENDIR)/tdcpm_lexer.lex.incfile.d
	@echo " INCFILE $@"
	@mkdir -p $(dir $@)
	$(QUIET)perl $(INCLUDE_FILE_PL) --input=$< && touch $@

$(GENDIR)/tdcpm_lexer.c: tdcpm_lexer.lex $(GENDIR)/tdcpm_lexer.lex.incfile
	@echo "   LEX   $@"
	@mkdir -p $(dir $@)
	$(QUIET)$(LEX) -8 -o $@.lex.tmp $<
	$(QUIET)cat $@.lex.tmp | $(FLEX_PATCH_PIPELINE) > $@.tmp
	$(QUIET)mv $@.tmp $@

$(GENDIR)/tdcpm_lexer.o: $(GENDIR)/tdcpm_parser.h

%.o: %.c %.d
	@echo "   CC    $@"
	$(QUIET)$(CC) $(call FILTER_WARNINGS,$@,$(CFLAGS)) $(OPTFLAGS) \
	  -o $@ -c $<

%.d: %.c
	@echo "  DEPS   $@"
	$(QUIET)$(CC) $(call FILTER_WARNINGS,$@,$(CFLAGS)) -MM -MG $< | \
	  sed -e 's,\($(*F)\)\.o[ :]*,$*.o $@ : ,g' \
	> $@

%.o: ../common/%.c %.d
	@echo "   CC    $@"
	$(QUIET)$(CC) $(call FILTER_WARNINGS,$@,$(CFLAGS)) $(OPTFLAGS) \
	  -o $@ -c $<

%.d: ../common/%.c
	@echo "  DEPS   $@"
	$(QUIET)$(CC) $(call FILTER_WARNINGS,$@,$(CFLAGS)) -MM -MG $< | \
	  sed -e 's,\($(*F)\)\.o[ :]*,$*.o $@ : ,g' \
	> $@

include ../makefile_deps.inc

tdcpm_test.dep: $(AUTO_DEPS)
	@echo " FULLDEP $@"
	@echo "$@ $(MAKECMDGOALS): \\" > $@
	$(QUIET)cat $(AUTO_DEPS) | sed -e 's,^.*:,,g' |\
          sed -e 's,^#.*,,g' |\
          sed -e 's,^.*:,,g' |\
	  $(SPACE_TO_NEWLINE) |\
	  sed -e 's,^,  ,g' |\
	  sed -e 's,$$,\\,g' |\
	  sed -e 's,\\\\$$,\\,g' | sort -u >> $@
	@echo "  tdcpm_parser.y\\" >> $@
	@echo "  tdcpm_lexer.lex\\" >> $@

#

tdcpm_test.base.dep: tdcpm_test.dep
	@echo " BASEDEP $@"
	@echo '$$(UCESB_BASE_DIR)/tdcpm/$(MAKECMDGOALS): \\' > $@
	$(QUIET)cat $< | grep -v ' \\' | sed -e 's,  /, /,' | \
	  sed -e 's,  ,  $$\(UCESB_BASE_DIR\)/tdcpm/,g' | sort -u >> $@

# Test

tdcpm_test: $(ALL_OBJS) tdcpm_test.dep tdcpm_test.base.dep
	@echo "  LINK   $@"
	$(QUIET)$(CCLINK) $(CCLINKFLAGS) $(ALL_OBJS) $(CCLIBS) -o $@

ifneq (clean,$(MAKECMDGOALS))
-include $(AUTO_DEPS) # dependency files (.d)
endif

.PHONY: test
test: test.stamp

test.stamp: tdcpm_test params_test.txt
	@echo "  TEST   $< [params_test.txt]"
	$(QUIET)cpp params_test.txt | ./tdcpm_test \
	  > $@.out 2> $@.err || echo "fail..."> /dev/null
	@diff -u tdcpm_test.good $@.out || \
	  ( echo "Failure while running: cpp params_test.txt | ./tdcpm_test:";\
	    echo "--- stdout ($@.out): ---" ; cat $@.out ; \
	    echo "--- stderr ($@.err): ---" ; cat $@.err ; \
	    echo "---------------" ; false)
	$(QUIET)touch $@
