# This file is part of UCESB - a tool for data unpacking and processing.
#
# Copyright (C) 2016  GSI Helmholtzzentrum fuer Schwerionenforschung GmbH
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA  02110-1301  USA

GENDIR = generated

GENOBJS = $(GENDIR)/parser.o $(GENDIR)/lexer.o
OBJS    = ucesb.o str_set.o file_line.o signal_id.o \
	dumper.o prefix_unit.o \
	definitions.o variable.o structure.o signal.o \
	param_arg.o bits_spec.o encode.o \
	unpack_code.o match_code.o signal_errors.o
#	rcsu.o cable_node.o hardware_def.o hardware_handler.o \
#	hw_module.o daq_code.o enumerate.o trace.o str_set.o

ALL_OBJS = $(OBJS) $(GENOBJS)

AUTO_DEPS = $(ALL_OBJS:%.o=%.d)

CXXLINK = $(CXX) # -fmudflap -lmudflap #-fstack-protector

CXXFLAGS += -g -I. -I../common # so autogenerated files find includes
CXXFLAGS += # -ansi , troubles with strdup and fileno
CXXFLAGS += -O3
CXXFLAGS += -DUCESB_SRC

CXXFLAGS += -ansi -Wall -W -Wno-unused-function -Wno-unused-label -Wno-unused-parameter -Wwrite-strings -Wconversion  -Wcast-qual #-Wshadow 

UNAME_S:=$(shell uname -s)
ifneq ($(UNAME_S),Darwin)
  CXXFLAGS += -Wno-non-template-friend
endif

OPTFLAGS += # -fmudflap #-fstack-protector

#########################################

include ../makefile_filter_warnings.inc

#########################################

CPP_DEFINES_CYGWIN = $(shell cpp -dM /dev/null | grep __CYGWIN__)

#########################################
# Cygwin got vsnprintf problems with -ansi

ifneq (,$(CPP_DEFINES_CYGWIN))
CXXFLAGS := $(filter-out -Wshadow -ansi,$(CXXFLAGS))
endif

#########################################

# Default target

all: ucesb

# Cleanup

clean:
	rm -rf $(GENDIR)
	rm -f $(ALL_OBJS)
	rm -f $(AUTO_DEPS)
	rm -f ucesb.base.dep
	rm -f ucesb.dep
	rm -f ucesb

# Create the autogenerated files (lexer, parser)

include ../lu_common/flex_patching.mk

INCLUDE_FILE_PL = ../lu_common/include_file.pl

AUTO_DEPS += $(GENDIR)/parser.y.incfile.d

$(GENDIR)/parser.y.incfile.d: parser.y $(INCLUDE_FILE_PL)
	@echo " INCDEPS $@"
	@mkdir -p $(dir $@)
	@perl $(INCLUDE_FILE_PL) --input=$< --dependencies=$@ > $@

$(GENDIR)/parser.y.incfile: parser.y $(GENDIR)/parser.y.incfile.d
	@echo " INCFILE $@"
	@mkdir -p $(dir $@)
	@perl $(INCLUDE_FILE_PL) --input=$< && touch $@

# TODO: should be automatically determined, i.e. if $(YACC) accepts -Werror
#ifeq ($(NO_YACC_WERROR),)
#YACC_WERROR_FLAG=-Werror
#endif

$(GENDIR)/y.tab.c: parser.y $(GENDIR)/parser.y.incfile
	@echo "  YACC   $@"
	@mkdir -p $(dir $@)
	@$(YACC) -d $(YACC_WERROR_FLAG) -o $@ $< || \
	  (echo "If -W flag unknown, try to compile with" \
		" '$(MAKE) NO_YACC_WERROR=1'" && \
	   exit 1 )
	@touch $(GENDIR)/y.tab.h

$(GENDIR)/y.tab.h: $(GENDIR)/y.tab.c

$(GENDIR)/parser.cc: $(GENDIR)/y.tab.c
	@echo "   CP    $@"
	@cp $(GENDIR)/y.tab.c $@

$(GENDIR)/parser.hh: $(GENDIR)/y.tab.h
	@echo "   CP    $@"
	@cp $(GENDIR)/y.tab.h $@

AUTO_DEPS += $(GENDIR)/lexer.lex.incfile.d

$(GENDIR)/lexer.lex.incfile.d: lexer.lex $(INCLUDE_FILE_PL)
	@echo " INCDEPS $@"
	@mkdir -p $(dir $@)
	@perl $(INCLUDE_FILE_PL) --input=$< --dependencies=$@ > $@

$(GENDIR)/lexer.lex.incfile: lexer.lex $(GENDIR)/lexer.lex.incfile.d
	@echo " INCFILE $@"
	@mkdir -p $(dir $@)
	@perl $(INCLUDE_FILE_PL) --input=$< && touch $@

$(GENDIR)/lexer.cc: lexer.lex $(GENDIR)/lexer.lex.incfile
	@echo "   LEX   $@"
	@mkdir -p $(dir $@)
	@$(LEX) -8 -o $@.lex.tmp $<
	@cat $@.lex.tmp | $(FLEX_PATCH_PIPELINE) > $@.tmp
	@mv $@.tmp $@

$(GENDIR)/lexer.o: $(GENDIR)/parser.hh

%.o: %.cc %.d
	@echo "   CXX   $@"
	@$(CXX) $(call FILTER_WARNINGS,$@,$(CXXFLAGS)) $(OPTFLAGS) -o $@ -c $<

%.d: %.cc
	@echo "  DEPS   $@"
	@$(CXX) $(call FILTER_WARNINGS,$@,$(CXXFLAGS)) -MM -MG $< | \
	  sed -e 's,\($(*F)\)\.o[ :]*,$*.o $@ : ,g' \
	> $@

%.o: ../common/%.cc %.d
	@echo "   CXX   $@"
	@$(CXX) $(call FILTER_WARNINGS,$@,$(CXXFLAGS)) $(OPTFLAGS) -o $@ -c $<

%.d: ../common/%.cc
	@echo "  DEPS   $@"
	@$(CXX) $(call FILTER_WARNINGS,$@,$(CXXFLAGS)) -MM -MG $< | \
	  sed -e 's,\($(*F)\)\.o[ :]*,$*.o $@ : ,g' \
	> $@

include ../makefile_deps.inc

ucesb.dep: $(AUTO_DEPS)
	@echo " FULLDEP $@"
	@echo "$@ $(MAKECMDGOALS): \\" > $@
	@cat $(AUTO_DEPS) | sed -e 's,^.*:,,g' |\
          sed -e 's,^#.*,,g' |\
          sed -e 's,^.*:,,g' |\
	  $(SPACE_TO_NEWLINE) |\
	  sed -e 's,^,  ,g' |\
	  sed -e 's,$$,\\,g' |\
	  sed -e 's,\\\\$$,\\,g' | sort -u >> $@
	@echo "  parser.y\\" >> $@
	@echo "  lexer.lex\\" >> $@

#

ucesb.base.dep: ucesb.dep
	@echo " BASEDEP $@"
	@echo '$$(UCESB_BASE_DIR)/ucesb/$(MAKECMDGOALS): \' > $@
	@cat $< | grep -v ' \\' | sed -e 's,  ,  $$\(UCESB_BASE_DIR\)/ucesb/,g' | sort -u >> $@

#
# Link

ucesb: $(ALL_OBJS) ucesb.dep ucesb.base.dep
	@echo "  LINK   $@"
	@$(CXXLINK) $(CXXLINKFLAGS) $(ALL_OBJS) $(CXXLIBS) -o $@

ifneq (clean,$(MAKECMDGOALS))
-include $(AUTO_DEPS) # dependency files (.d)
endif

